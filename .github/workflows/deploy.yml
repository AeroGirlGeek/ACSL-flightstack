# name: Deploy Docusaurus Site

# on:
#   push:
#     branches:
#       - main  # or the branch where your website source code resides

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 18  # specify the Node.js version you're using

#       - name: Install dependencies
#         working-directory: ./docs  # Change this if necessary
#         run: |
#           npm ci
#           # npm ci  # or npm install if package-lock.json is not present

#       - name: Build Docusaurus site
#         working-directory: ./docs
#         run: npm run build

#       - name: Check if CNAME exists and create it if missing
#         run: |
#           if [ ! -f ./docs/build/CNAME ]; then
#             echo "acslstack.com" > ./docs/build/CNAME
#           fi

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./docs/build 
#           cname: acslstack.com # Add your custom domain here

name: Deploy to GitHub Pages

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  test-deploy:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          working-directory: ./docs
          node-version: 18
          cache: npm
      - name: Install dependencies
        working-directory: ./docs
        run: npm ci
      - name: Test build website
        working-directory: ./docs
        run: npm run build
  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          working-directory: ./docs
          node-version: 18
          cache: npm
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Deploy to GitHub Pages
        env:
          USE_SSH: true
        working-directory: ./docs
        run: |
          # git config --global user.email "actions@github.com"
          # git config --global user.name "gh-actions"
          npm ci
          npm run deploy
